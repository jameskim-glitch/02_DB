ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;
CREATE USER kh_shop IDENTIFIED BY 1234;
GRANT CREATE SESSION TO kh_shop;
GRANT CREATE TABLE TO kh_shop;
ALTER USER kh_shop DEFAULT TABLESPACE SYSTEM QUOTA UNLIMITED ON SYSTEM;

-- 1. 카테고리 테이블 생성
CREATE TABLE CATEGORIES (
    CATEGORY_ID NUMBER PRIMARY KEY,
    CATEGORY_NAME VARCHAR2(100) UNIQUE
);

-- 2. 상품 정보 테이블 생성
CREATE TABLE PRODUCTS(
    PRODUCT_ID NUMBER PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(100) NOT NULL,
    CATEGORY NUMBER REFERENCES CATEGORIES(CATEGORY_ID),
    PRICE NUMBER DEFAULT 0,
    STOCK_QUANTITY NUMBER DEFAULT 0
);

-- 3. 고객 정보 테이블
CREATE TABLE CUSTOMERS( 
	CUSTOMER_ID NUMBER PRIMARY KEY,
	NAME VARCHAR2(20) NOT NULL,
	GENDER CHAR(3) CHECK(GENDER IN ('남', '여')),
	ADDRESS VARCHAR2(100),
	PHONE VARCHAR2(30)
);

-- 4. 주문 정보 테이블
CREATE TABLE ORDERS (
    ORDER_ID NUMBER PRIMARY KEY,
    ORDER_DATE DATE DEFAULT SYSDATE,
    STATUS CHAR(1) DEFAULT 'N' CHECK (STATUS IN ('Y', 'N')),
    CUSTOMER_ID NUMBER REFERENCES CUSTOMERS(CUSTOMER_ID) ON DELETE CASCADE
);

-- 5. 주문 상세 정보 테이블 (ORDER_DETAILS)
CREATE TABLE ORDER_DETAILS( 
ORDER_DETAIL_ID NUMBER PRIMARY KEY,
ORDER_ID NUMBER REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE,
PRODUCT_ID NUMBER REFERENCES PRODUCTS(PRODUCT_ID) ON DELETE CASCADE,
QUANTITY NUMBER,
PRICE_PER_UNIT NUMBER
);

-- 6. CATEGORIES 테이블 샘플 데이터
INSERT INTO CATEGORIES VALUES(1, '스마트폰');
INSERT INTO CATEGORIES VALUES(2, 'TV');
INSERT INTO CATEGORIES VALUES(3, 'GAMIG');

SELECT * FROM CATEGORIES;

-- 7. PRODUCT 테이블 샘플 데이터
INSERT INTO PRODUCTS VALUES(101,'Apple iPhone 12', 1, 1500000, 30);
INSERT INTO PRODUCTS VALUES(102,'Samsung Galaxy S24', 1, 1800000, 50);
INSERT INTO PRODUCTS VALUES(201,'LG OLED TV', 2, 3600000, 10);
INSERT INTO PRODUCTS VALUES(301,'Sony PlayStation 5', 3, 700000, 15);
SELECT * FROM PRODUCTS;

--8 CUSTOMERS 테이블 샘플 데이터
INSERT INTO CUSTOMERS VALUES(1, '홍길동', '남', '서울시 성동구 왕십리', '010-1111-2222');
INSERT INTO CUSTOMERS VALUES(2, '유관순', '여', '서울시 종로구 안국동', '010-3333-1111');
SELECT * FROM CUSTOMERS;

--9 ORDERS 테이블 샘플 데이터
INSERT INTO ORDERS VALUES (576, '2024-02-29', 'N', 1);
INSERT INTO ORDERS VALUES (978, '2024-03-11', 'Y', 2);
INSERT INTO ORDERS VALUES (777, '2024-03-11', 'N', 2);
INSERT INTO ORDERS VALUES (134, '2022-12-25', 'Y', 1);
INSERT INTO ORDERS VALUES (499, '2020-01-03', 'Y', 1);
SELECT * FROM ORDERS;

-- 10. ORDER_DETAIL 테이블 샘플 데이터
INSERT INTO ORDER_DETAILS VALUES (111, 576, 101, 1, 1500000);
INSERT INTO ORDER_DETAILS VALUES (222, 978, 201, 2, 3600000);
INSERT INTO ORDER_DETAILS VALUES (333, 978, 102, 1, 1800000);
INSERT INTO ORDER_DETAILS VALUES (444, 777, 301, 5, 700000);
INSERT INTO ORDER_DETAILS VALUES (555, 134, 102, 1, 1800000);
INSERT INTO ORDER_DETAILS VALUES (666, 499, 201, 3, 3600000);
SELECT * FROM ORDER_DETAILS;

-- 11. 쇼핑몰 관리자가 주문은 받았으나, 아직 처리가 안된 주문을 처리하려고
--한다. 현재 주문 내역 중 아직 처리되지 않은 주문을 조회하시오. 😀
--(고객명, 주문일, 처리상태)

SELECT CUSTOMERS.NAME, ORDER_DATE, STATUS
FROM ORDERS
JOIN CUSTOMERS USING (CUSTOMER_ID)
WHERE STATUS = 'N';

-- 12. 홍길동 고객이 2024년도에 본인이 주문한 전체 내역을 조회하고자 한다.
--주문번호, 주문날짜, 처리상태 조회하시오
SELECT ORDER_ID, ORDER_DATE, STATUS
FROM ORDERS
JOIN CUSTOMERS USING (CUSTOMER_ID)
WHERE EXTRACT(YEAR FROM ORDER_DATE) = 2024;


--13. 유관순 고객이 지금껏 주문한 상품의 수량 별 금액을 조회하려고 한다.
--주문번호, 상품명, 수량, 개별금액, 주문별금액을 조회하시오 

SELECT
    ORDER_DETAILS.ORDER_ID,PRODUCT_NAME,QUANTITY,PRICE_PER_UNIT,QUANTITY * PRICE_PER_UNIT
FROM ORDER_DETAILS
JOIN ORDERS ON ORDER_DETAILS.ORDER_ID = ORDERS.ORDER_ID
JOIN PRODUCTS ON ORDER_DETAILS.PRODUCT_ID = PRODUCTS.PRODUCT_ID
JOIN CUSTOMERS ON ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
WHERE CUSTOMERS.NAME = '유관순';